### Get the token for the admin user
POST {{protocol}}{{host}}:{{port}}/api/auth
Content-Type: application/json
Accept: application/json

{
  "email": "admin@test.nl",
  "password": "test"
}

> {%
    client.global.set("token", response.body.token);
%}

### Get all animals without filters - Good Weather
GET {{protocol}}{{host}}:{{port}}/api/animals
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 200", function() {
        client.assert(response.status === 200, "Expected status code 200");
    });
%}

### Get all regions - Good Weather
GET {{protocol}}{{host}}:{{port}}/api/animals/regions
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 200", function() {
        client.assert(response.status === 200, "Expected status code 200");
    });
%}

### Get all groups - Good Weather
GET {{protocol}}{{host}}:{{port}}/api/animals/groups
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 200", function() {
        client.assert(response.status === 200, "Expected status code 200");
    });
%}

### Get animal by id - Good Weather
GET {{protocol}}{{host}}:{{port}}/api/animals/0
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 200", function() {
        client.assert(response.status === 200, "Expected status code 200");
    });
%}

### Create a new animal - Good Weather (Assuming user is logged in and is a user)
POST {{protocol}}{{host}}:{{port}}/api/animals
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "Zorro de Zeester",
  "species": "Zeester",
  "group": "Vis",
  "region": "Stille Oceaan",
  "age": 3,
  "gender": "M",
  "description": "Zorro is een Zeester",
  "ownerId": 1
}

> {%
    client.test("Status code is 201", function() {
        client.assert(response.status === 201, "Expected status code 201");
    });
%}

### Get animals filtered by owner with wrong ownerId - Bad Weather
GET {{protocol}}{{host}}:{{port}}/api/animals?ownerId=-1
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 400", function() {
        client.assert(response.status === 400, "Expected status code 400");
    });
%}

### Get animal by an invalid id - Bad Weather
GET {{protocol}}{{host}}:{{port}}/api/animals/-1
Authorization: Bearer {{token}}

> {%
    client.test("Status code is 404", function() {
        client.assert(response.status === 404, "Expected status code 404");
    });
%}


### Get animal by id without being logged in - Bad Weather
GET {{protocol}}{{host}}:{{port}}/api/animals/-1

> {%
    client.test("Status code is 401", function() {
        client.assert(response.status === 401, "Expected status code 401");
    });
%}

### Create a new animal with incomplete data - Bad Weather
POST {{protocol}}{{host}}:{{port}}/api/animals
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "New Animal"
}

> {%
    client.test("Status code is 400", function() {
        client.assert(response.status === 400, "Expected status code 400");
    });
%}

